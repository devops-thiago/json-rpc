name: Deploy to Maven Central

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  deploy-snapshot:
    name: Deploy Snapshot
    if: github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Create Maven settings
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml << EOF
          <settings>
            <servers>
              <server>
                <id>ossrh</id>
                <username>${{ secrets.OSSRH_USERNAME }}</username>
                <password>${{ secrets.OSSRH_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}

      - name: Verify Maven settings
        run: |
          echo "Maven settings file content:"
          cat ~/.m2/settings.xml
          echo "Username length: $(echo '${{ secrets.OSSRH_USERNAME }}' | wc -c)"
          echo "Token length: $(echo '${{ secrets.OSSRH_TOKEN }}' | wc -c)"

      - name: Update version to SNAPSHOT
        run: |
          mvn versions:set -DnewVersion=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)-SNAPSHOT
          mvn versions:commit

      - name: Deploy SNAPSHOT to Maven Central
        run: |
          mvn clean deploy -DskipTests

  deploy-release:
    name: Deploy Release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Create Maven settings
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml << EOF
          <settings>
            <servers>
              <server>
                <id>ossrh</id>
                <username>${{ secrets.OSSRH_USERNAME }}</username>
                <password>${{ secrets.OSSRH_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Verify Maven settings
        run: |
          echo "Maven settings file content:"
          cat ~/.m2/settings.xml
          echo "Username length: $(echo '${{ secrets.OSSRH_USERNAME }}' | wc -c)"
          echo "Token length: $(echo '${{ secrets.OSSRH_TOKEN }}' | wc -c)"

      - name: Update version
        run: |
          mvn versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }}
          mvn versions:commit

      - name: Deploy Release to Maven Central
        run: |
          mvn clean deploy -P release -DskipTests

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/*.jar
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
